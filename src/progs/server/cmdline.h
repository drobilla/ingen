/* cmdline.h */

/* File autogenerated by gengetopt version 2.18  */

#ifndef CMDLINE_H
#define CMDLINE_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "Om - An OSC controlled realtime modular synthesizer"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION VERSION
#endif

struct gengetopt_args_info
{
  const char *help_help; /* Print help and exit help description.  */
  const char *version_help; /* Print version and exit help description.  */
  char * port_arg;	/* OSC port to listen on (default='16180').  */
  char * port_orig;	/* OSC port to listen on original value given at command line.  */
  const char *port_help; /* OSC port to listen on help description.  */
  char * jack_server_arg;	/* Name of Jack server to attach to.  */
  char * jack_server_orig;	/* Name of Jack server to attach to original value given at command line.  */
  const char *jack_server_help; /* Name of Jack server to attach to help description.  */
  int in_jackd_flag;	/* Run engine as in-process JACK client (default=off).  */
  const char *in_jackd_help; /* Run engine as in-process JACK client help description.  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int port_given ;	/* Whether port was given.  */
  int jack_server_given ;	/* Whether jack-server was given.  */
  int in_jackd_given ;	/* Whether in-jackd was given.  */

  char **inputs ; /* unamed options */
  unsigned inputs_num ; /* unamed options number */
} ;

extern const char *gengetopt_args_info_purpose;
extern const char *gengetopt_args_info_usage;
extern const char *gengetopt_args_info_help[];

int cmdline_parser (int argc, char * const *argv,
  struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv,
  struct gengetopt_args_info *args_info,
  int override, int initialize, int check_required);
int cmdline_parser_file_save(const char *filename,
  struct gengetopt_args_info *args_info);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_required (struct gengetopt_args_info *args_info,
  const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* CMDLINE_H */
